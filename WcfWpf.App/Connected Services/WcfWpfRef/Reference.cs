//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfWpf.App.WcfWpfRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Article", Namespace="http://schemas.datacontract.org/2004/07/WcfWpf.Contracts")]
    [System.SerializableAttribute()]
    public partial class Article : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeaserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Teaser {
            get {
                return this.TeaserField;
            }
            set {
                if ((object.ReferenceEquals(this.TeaserField, value) != true)) {
                    this.TeaserField = value;
                    this.RaisePropertyChanged("Teaser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfWpfRef.IWcfWpfService")]
    public interface IWcfWpfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfWpfService/GetTitles", ReplyAction="http://tempuri.org/IWcfWpfService/GetTitlesResponse")]
        string[] GetTitles(int countOfMostRecentArticles);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfWpfService/GetTitles", ReplyAction="http://tempuri.org/IWcfWpfService/GetTitlesResponse")]
        System.IAsyncResult BeginGetTitles(int countOfMostRecentArticles, System.AsyncCallback callback, object asyncState);
        
        string[] EndGetTitles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfWpfService/GetArticle", ReplyAction="http://tempuri.org/IWcfWpfService/GetArticleResponse")]
        WcfWpf.App.WcfWpfRef.Article GetArticle(int number);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfWpfService/GetArticle", ReplyAction="http://tempuri.org/IWcfWpfService/GetArticleResponse")]
        System.IAsyncResult BeginGetArticle(int number, System.AsyncCallback callback, object asyncState);
        
        WcfWpf.App.WcfWpfRef.Article EndGetArticle(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfWpfServiceChannel : WcfWpf.App.WcfWpfRef.IWcfWpfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTitlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTitlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WcfWpf.App.WcfWpfRef.Article Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WcfWpf.App.WcfWpfRef.Article)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfWpfServiceClient : System.ServiceModel.ClientBase<WcfWpf.App.WcfWpfRef.IWcfWpfService>, WcfWpf.App.WcfWpfRef.IWcfWpfService {
        
        private BeginOperationDelegate onBeginGetTitlesDelegate;
        
        private EndOperationDelegate onEndGetTitlesDelegate;
        
        private System.Threading.SendOrPostCallback onGetTitlesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetArticleDelegate;
        
        private EndOperationDelegate onEndGetArticleDelegate;
        
        private System.Threading.SendOrPostCallback onGetArticleCompletedDelegate;
        
        public WcfWpfServiceClient() {
        }
        
        public WcfWpfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfWpfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfWpfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfWpfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetTitlesCompletedEventArgs> GetTitlesCompleted;
        
        public event System.EventHandler<GetArticleCompletedEventArgs> GetArticleCompleted;
        
        public string[] GetTitles(int countOfMostRecentArticles) {
            return base.Channel.GetTitles(countOfMostRecentArticles);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTitles(int countOfMostRecentArticles, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTitles(countOfMostRecentArticles, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndGetTitles(System.IAsyncResult result) {
            return base.Channel.EndGetTitles(result);
        }
        
        private System.IAsyncResult OnBeginGetTitles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countOfMostRecentArticles = ((int)(inValues[0]));
            return this.BeginGetTitles(countOfMostRecentArticles, callback, asyncState);
        }
        
        private object[] OnEndGetTitles(System.IAsyncResult result) {
            string[] retVal = this.EndGetTitles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTitlesCompleted(object state) {
            if ((this.GetTitlesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTitlesCompleted(this, new GetTitlesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTitlesAsync(int countOfMostRecentArticles) {
            this.GetTitlesAsync(countOfMostRecentArticles, null);
        }
        
        public void GetTitlesAsync(int countOfMostRecentArticles, object userState) {
            if ((this.onBeginGetTitlesDelegate == null)) {
                this.onBeginGetTitlesDelegate = new BeginOperationDelegate(this.OnBeginGetTitles);
            }
            if ((this.onEndGetTitlesDelegate == null)) {
                this.onEndGetTitlesDelegate = new EndOperationDelegate(this.OnEndGetTitles);
            }
            if ((this.onGetTitlesCompletedDelegate == null)) {
                this.onGetTitlesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTitlesCompleted);
            }
            base.InvokeAsync(this.onBeginGetTitlesDelegate, new object[] {
                        countOfMostRecentArticles}, this.onEndGetTitlesDelegate, this.onGetTitlesCompletedDelegate, userState);
        }
        
        public WcfWpf.App.WcfWpfRef.Article GetArticle(int number) {
            return base.Channel.GetArticle(number);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetArticle(int number, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetArticle(number, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WcfWpf.App.WcfWpfRef.Article EndGetArticle(System.IAsyncResult result) {
            return base.Channel.EndGetArticle(result);
        }
        
        private System.IAsyncResult OnBeginGetArticle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int number = ((int)(inValues[0]));
            return this.BeginGetArticle(number, callback, asyncState);
        }
        
        private object[] OnEndGetArticle(System.IAsyncResult result) {
            WcfWpf.App.WcfWpfRef.Article retVal = this.EndGetArticle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetArticleCompleted(object state) {
            if ((this.GetArticleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetArticleCompleted(this, new GetArticleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetArticleAsync(int number) {
            this.GetArticleAsync(number, null);
        }
        
        public void GetArticleAsync(int number, object userState) {
            if ((this.onBeginGetArticleDelegate == null)) {
                this.onBeginGetArticleDelegate = new BeginOperationDelegate(this.OnBeginGetArticle);
            }
            if ((this.onEndGetArticleDelegate == null)) {
                this.onEndGetArticleDelegate = new EndOperationDelegate(this.OnEndGetArticle);
            }
            if ((this.onGetArticleCompletedDelegate == null)) {
                this.onGetArticleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetArticleCompleted);
            }
            base.InvokeAsync(this.onBeginGetArticleDelegate, new object[] {
                        number}, this.onEndGetArticleDelegate, this.onGetArticleCompletedDelegate, userState);
        }
    }
}
